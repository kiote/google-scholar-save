// use it as a bookmark
// it will export search results on given page to zotero-readable format
// change "Show 100 results per page" to make it more effifient
// you still have to change pages manually
javascript:(function(){function w(s,t=5e3){return new Promise((r,j)=>{const c=()=>{const e=document.querySelector(s);if(e)r(e)},o=new MutationObserver(()=>{c()&&(o.disconnect(),r())});o.observe(document.body,{childList:!0,subtree:!0}),c(),setTimeout(()=>{o.disconnect(),j(new Error(`Element ${s} not found within ${t}ms`))},t)})}async function e(){try{console.log("Processing citations"),await w(".List-results-items");const c=await w("input.results-actions-selectall-checkbox");if(!c)throw new Error("Checkbox not found");c.click();const b=Array.from(document.querySelectorAll("button.xpl-toggle-btn")).find(e=>e.textContent.trim()==="Export");if(!b)throw new Error("Export button not found");b.click();const t=Array.from(document.querySelectorAll('a.nav-link[href=""][role="tab"]')).find(e=>e.textContent.trim()==="Citations");if(!t)throw new Error("Citations tab not found");t.click();const l=await w('label[for="download-ris"]'),r=l.querySelector('input[type="radio"]');r&&r.click();const d=await w('button.stats-SearchResults_Citation_Download.xpl-btn-primary');console.log("Download button found:",d),d.click(),console.log("Download button clicked"),console.log("Citations export process completed")}catch(e){console.error("Error during citation export:",e.message)}}e()})();
